spring.session.store-type=jdbc

security.ignored=true
security.basic.enabled=false

server.port=8080

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false

logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
#logging.level.com.vaadin=INFO

# BANNER
#banner.charset=UTF-8 # Banner file encoding.
#banner.location=classpath:banner.txt # Banner file location.
#banner.image.location=classpath:banner.gif # Banner image file location (jpg/png can also be used).
#banner.image.width= # Width of the banner image in chars (default 76)
#banner.image.height= # Height of the banner image in chars (default based on image height)
#banner.image.margin= # Left hand image margin in chars (default 2)
#banner.image.invert= # If images should be inverted for dark terminal themes (default false)

# LOGGING
#logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name. For instance `myapp.log`
#logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.path= # Location of the log file. For instance `/var/log`
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.


# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)
#spring.config.location= # Config file locations.
#spring.config.name=application # Config file name.

# JMX
#spring.jmx.default-domain= # JMX domain name.
#spring.jmx.enabled=true # Expose management beans to the JMX domain.
#spring.jmx.server=mbeanServer # MBeanServer bean name.

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.address= # Network address to which the server should bind to.
#server.compression.enabled=false # If response compression is enabled.
#server.compression.excluded-user-agents= # List of user-agents to exclude from compression.
#server.compression.mime-types= # Comma-separated list of MIME types that should be compressed. For instance `text/html,text/css,application/json`
#server.compression.min-response-size= # Minimum response size that is required for compression to be performed. For instance 2048
#server.connection-timeout= # Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector's container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.
#server.context-parameters.*= # Servlet context init parameters. For instance `server.context-parameters.a=alpha`
#server.context-path=/
server.context-path=/
# Context path of the application.
#server.display-name=application # Display name of the application.
#server.max-http-header-size=0 # Maximum size in bytes of the HTTP message header.
#server.error.include-stacktrace=never # When to include a "stacktrace" attribute.
#server.error.path=/error # Path of the error controller.
#server.error.whitelabel.enabled=true # Enable the default error page displayed in browsers in case of a server error.
#server.jetty.acceptors= # Number of acceptor threads to use.
#server.jetty.max-http-post-size=0 # Maximum size in bytes of the HTTP post or put content.
#server.jetty.selectors= # Number of selector threads to use.
#server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.
#server.jsp-servlet.init-parameters.*= # Init parameters used to configure the JSP servlet
#server.jsp-servlet.registered=true # Whether or not the JSP servlet is registered
#server.port=8080 # Server HTTP port.
#server.server-header= # Value to use for the Server response header (no header is sent if empty)
#server.servlet-path=/ # Path of the main dispatcher servlet.
#server.use-forward-headers= # If X-Forwarded-* headers should be applied to the HttpRequest.
#server.session.cookie.comment= # Comment for the session cookie.
#server.session.cookie.domain= # Domain for the session cookie.
#server.session.cookie.http-only= # "HttpOnly" flag for the session cookie.
#server.session.cookie.max-age= # Maximum age of the session cookie in seconds.
#server.session.cookie.name= # Session cookie name.
#server.session.cookie.path= # Path of the session cookie.
#server.session.cookie.secure= # "Secure" flag for the session cookie.
#server.session.persistent=false # Persist session data between restarts.
#server.session.store-dir= # Directory used to store session data.
#server.session.timeout= # Session timeout in seconds.
#server.session.tracking-modes= # Session tracking modes (one or more of the following: "cookie", "url", "ssl").
#server.ssl.ciphers= # Supported SSL ciphers.
#server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.
#server.ssl.enabled= # Enable SSL support.
#server.ssl.enabled-protocols= # Enabled SSL protocols.
#server.ssl.key-alias= # Alias that identifies the key in the key store.
#server.ssl.key-password= # Password used to access the key in the key store.
#server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).
#server.ssl.key-store-password= # Password used to access the key store.
#server.ssl.key-store-provider= # Provider for the key store.
#server.ssl.key-store-type= # Type of the key store.
#server.ssl.protocol=TLS # SSL protocol to use.
#server.ssl.trust-store= # Trust store that holds SSL certificates.
#server.ssl.trust-store-password= # Password used to access the trust store.
#server.ssl.trust-store-provider= # Provider for the trust store.
#server.ssl.trust-store-type= # Type of the trust store.
#server.tomcat.accept-count= # Maximum queue length for incoming connection requests when all possible request processing threads are in use.
#server.tomcat.accesslog.buffered=true # Buffer output such that it is only flushed periodically.
#server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.
#server.tomcat.accesslog.enabled=false # Enable access log.
#server.tomcat.accesslog.pattern=common # Format pattern for access logs.
#server.tomcat.accesslog.prefix=access_log # Log file name prefix.
#server.tomcat.accesslog.rename-on-rotate=false # Defer inclusion of the date stamp in the file name until rotate time.
#server.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for IP address, Hostname, protocol and port used for the request.
#server.tomcat.accesslog.rotate=true # Enable access log rotation.
#server.tomcat.accesslog.suffix=.log # Log file name suffix.
#server.tomcat.additional-tld-skip-patterns= # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.
#server.tomcat.background-processor-delay=30 # Delay in seconds between the invocation of backgroundProcess methods.
#server.tomcat.basedir= # Tomcat base directory. If not specified a temporary directory will be used.
#server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
#169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
#127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#172\\.1[6-9]{1}\\.\\d{1,3}\\.\\d{1,3}|\\
#172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|\\
#172\\.3[0-1]{1}\\.\\d{1,3}\\.\\d{1,3} # regular expression matching trusted IP addresses.
#server.tomcat.max-connections= # Maximum number of connections that the server will accept and process at any given time.
#server.tomcat.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.
#server.tomcat.max-threads=0 # Maximum amount of worker threads.
#server.tomcat.min-spare-threads=0 # Minimum amount of worker threads.
#server.tomcat.port-header=X-Forwarded-Port # Name of the HTTP header used to override the original port value.
#server.tomcat.protocol-header= # Header that holds the incoming protocol, usually named "X-Forwarded-Proto".
#server.tomcat.protocol-header-https-value=https # Value of the protocol header that indicates that the incoming request uses SSL.
#server.tomcat.redirect-context-root= # Whether requests to the context root should be redirected by appending a / to the path.
#server.tomcat.remote-ip-header= # Name of the http header from which the remote ip is extracted. For instance `X-FORWARDED-FOR`
#server.tomcat.uri-encoding=UTF-8 # Character encoding to use to decode the URI.
#server.undertow.accesslog.dir= # Undertow access log directory.
#server.undertow.accesslog.enabled=false # Enable access log.
#server.undertow.accesslog.pattern=common # Format pattern for access logs.
#server.undertow.accesslog.prefix=access_log. # Log file name prefix.
#server.undertow.accesslog.rotate=true # Enable access log rotation.
#server.undertow.accesslog.suffix=log # Log file name suffix.
#server.undertow.buffer-size= # Size of each buffer in bytes.
#server.undertow.buffers-per-region= # Number of buffer per region.
#server.undertow.direct-buffers= # Allocate buffers outside the Java heap.
#server.undertow.io-threads= # Number of I/O threads to create for the worker.
#server.undertow.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.
#server.undertow.worker-threads= # Number of worker threads.

# SPRING RESOURCES HANDLING (ResourceProperties)
#spring.resources.add-mappings=true # Enable default resource handling.
#spring.resources.cache-period= # Cache period for the resources served by the resource handler, in seconds.
#spring.resources.chain.cache=true # Enable caching in the Resource chain.
#spring.resources.chain.enabled= # Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.
#spring.resources.chain.gzipped=false # Enable resolution of already gzipped resources.
#spring.resources.chain.html-application-cache=false # Enable HTML5 application cache manifest rewriting.
#spring.resources.chain.strategy.content.enabled=false # Enable the content Version Strategy.
#spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.enabled=false # Enable the fixed Version Strategy.
#spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.
#spring.resources.chain.strategy.fixed.version= # Version string to use for the Version Strategy.
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.

# SPRING SESSION (SessionProperties)
#spring.session.hazelcast.flush-mode=on-save # Sessions flush mode.
#spring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.
#spring.session.jdbc.initializer.enabled= # Create the required session tables on startup if necessary. Enabled automatically if the default table name is set or a custom schema is configured.
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.session.jdbc.table-name=SPRING_SESSION # Name of database table used to store sessions.
#spring.session.mongo.collection-name=sessions # Collection name used to store sessions.
#spring.session.redis.flush-mode=on-save # Sessions flush mode.
#spring.session.redis.namespace= # Namespace for keys used to store sessions.
#spring.session.store-type= # Session store type.

# SPRING SOCIAL (SocialWebAutoConfiguration)
#spring.social.auto-connection-views=false # Enable the connection status view for supported providers.

# SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)
#spring.social.facebook.app-id= # your application's Facebook App ID
#spring.social.facebook.app-secret= # your application's Facebook App Secret

# SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)
#spring.social.linkedin.app-id= # your application's LinkedIn App ID
#spring.social.linkedin.app-secret= # your application's LinkedIn App Secret

# SPRING SOCIAL TWITTER (TwitterAutoConfiguration)
#spring.social.twitter.app-id= # your application's Twitter App ID
#spring.social.twitter.app-secret= # your application's Twitter App Secret

# SPRING WEB SERVICES (WebServicesProperties)
#spring.webservices.path=/services # Path that serves as the base URI for the services.
#spring.webservices.servlet.init= # Servlet init parameters to pass to Spring Web Services.
#spring.webservices.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
#security.basic.authorize-mode=role # Security authorize mode to apply.
#security.basic.enabled=true # Enable basic authentication.
#security.basic.path=/** # Comma-separated list of paths to secure.
#security.basic.realm=Spring # HTTP basic realm name.
#security.enable-csrf=false # Enable Cross Site Request Forgery support.
#security.filter-order=0 # Security filter chain order.
#security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.
#security.headers.cache=true # Enable cache control HTTP headers.
#security.headers.content-security-policy= # Value for content security policy header.
#security.headers.content-security-policy-mode=default # Content security policy mode.
#security.headers.content-type=true # Enable "X-Content-Type-Options" header.
#security.headers.frame=true # Enable "X-Frame-Options" header.
#security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).
#security.headers.xss=true # Enable cross site scripting (XSS) protection.
#security.ignored= # Comma-separated list of paths to exclude from the default secured paths.
#security.require-ssl=false # Enable secure channel for all requests.
#security.sessions=stateless # Session creation policy (always, never, if_required, stateless).
#security.user.name=user # Default user name.
#security.user.password= # Password for the default user name. A random password is logged on startup by default.
#security.user.role=USER # Granted roles for the default user name.

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security.oauth2.client.client-id= # OAuth2 client id.
#security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter
#security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server

# LIQUIBASE (LiquibaseProperties)
#liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.
#liquibase.check-change-log-location=true # Check the change log location exists.
#liquibase.contexts= # Comma-separated list of runtime contexts to use.
#liquibase.default-schema= # Default database schema.
#liquibase.drop-first=false # Drop the database schema first.
#liquibase.enabled=true # Enable liquibase support.
#liquibase.labels= # Comma-separated list of runtime labels to use.
#liquibase.parameters.*= # Change log parameters.
#liquibase.password= # Login password of the database to migrate.
#liquibase.rollback-file= # File to which rollback SQL will be written when an update is performed.
#liquibase.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#liquibase.user= # Login user of the database to migrate.

# DATA REST (RepositoryRestProperties)
#spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.
#spring.data.rest.default-page-size= # Default size of pages.
#spring.data.rest.detection-strategy=default # Strategy to use to determine which repositories get exposed.
#spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.
#spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.
#spring.data.rest.max-page-size= # Maximum size of pages.
#spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.
#spring.data.rest.return-body-on-create= # Return a response body after creating an entity.
#spring.data.rest.return-body-on-update= # Return a response body after updating an entity.
#spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
spring.datasource.data=classpath:/sql/data.sql
# Data (DML) script resource references.
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
spring.datasource.initialize=true
#spring.datasource.initialize=true # Populate the database using 'data.sql'.
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
#spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.schema=classpath:/sql/data.sql
# Schema (DDL) script resource references.
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.url=jdbc:h2:mem:app_db;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url=jdbc:h2:tcp://localhost/~/antuka-crm;MODE=MYSQL
# JDBC url of the database.
spring.datasource.username=sa
spring.datasource.password=
# Login password of the database.
spring.datasource.driver-class-name=org.h2.Driver
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.

# H2 Web Console (H2ConsoleProperties)
spring.h2.console.enabled=true
#Enable the console.
spring.h2.console.path=/h2-console
#Path at which the console will be available.
spring.h2.console.settings.trace=true
# Enable trace output.
spring.h2.console.settings.web-allow-others=true
# Enable remote access.

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Initialize the schema on startup.
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
#spring.jpa.show-sql=false # Enable logging of SQL statements.

# JTA (JtaAutoConfiguration)
#spring.jta.enabled=true # Enable JTA support.
#spring.jta.log-dir= # Transaction logs directory.
#spring.jta.transaction-manager-id= # Transaction manager unique identifier.

# TRANSACTION (TransactionProperties)
#spring.transaction.default-timeout= # Default transaction timeout in seconds.
#spring.transaction.rollback-on-commit-failure= # Perform the rollback on commit failures.

# SPRING BATCH (BatchProperties)
#spring.batch.initializer.enabled= # Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.
#spring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.
#spring.batch.job.names= # Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.
#spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.